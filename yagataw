-- TRASH-style UI + PlayerGui parent + Auto-Stage + Checkpoints path (1..8), interval 2s

-- ===== CONFIG =====
local START_STAGE = 1
local END_STAGE   = 8
local INTERVAL    = 2
local OFFSET_Y    = 4
-- ==================

local player = game:GetService("Players").LocalPlayer
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "TRASHLIKE_GUI"
gui.ResetOnSpawn = false

-- FRAME
local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 300, 0, 120)
frame.Position = UDim2.new(0.3, 0, 0.3, 0)
frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 10)
local stroke = Instance.new("UIStroke", frame)
stroke.Thickness = 2
stroke.Color = Color3.fromRGB(255, 0, 255)

-- TITLE
local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1, -40, 0, 40)
title.Position = UDim2.new(0, 10, 0, 5)
title.Text = "TRASHNEVERDIE"
title.Font = Enum.Font.GothamBold
title.TextSize = 18
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.BackgroundTransparency = 1
title.TextXAlignment = Enum.TextXAlignment.Left

task.spawn(function()
    while task.wait(0.2) do
        title.TextColor3 = Color3.fromHSV(tick() % 5 / 5, 1, 1)
    end
end)

-- MINIMIZE
local minBtn = Instance.new("TextButton", frame)
minBtn.Size = UDim2.new(0, 30, 0, 30)
minBtn.Position = UDim2.new(1, -35, 0, 5)
minBtn.Text = "-"
minBtn.Font = Enum.Font.GothamBold
minBtn.TextSize = 18
minBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
minBtn.BackgroundColor3 = Color3.fromRGB(80, 0, 80)
Instance.new("UICorner", minBtn).CornerRadius = UDim.new(0, 8)

local isMinimized = false
minBtn.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    for _, obj in ipairs(frame:GetChildren()) do
        if obj:IsA("GuiObject") and obj ~= title and obj ~= minBtn then
            obj.Visible = not isMinimized
        end
    end
    frame.Size = isMinimized and UDim2.new(0, 300, 0, 50) or UDim2.new(0, 300, 0, 120)
end)

-- TOGGLE
local toggle = Instance.new("TextButton", frame)
toggle.Size = UDim2.new(0.9, 0, 0, 40)
toggle.Position = UDim2.new(0.05, 0, 0, 60)
toggle.Text = "Teleport OFF"
toggle.Font = Enum.Font.GothamBold
toggle.TextSize = 16
toggle.BackgroundColor3 = Color3.fromRGB(60, 0, 90)
toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
Instance.new("UICorner", toggle).CornerRadius = UDim.new(0, 8)

-- ===== LOGIC =====
local isActive = false
local humanoidRootPart

local function updateHRP()
    local char = player.Character or player.CharacterAdded:Wait()
    humanoidRootPart = char:WaitForChild("HumanoidRootPart")
end
player.CharacterAdded:Connect(updateHRP)
updateHRP()

-- cari value stage (leaderstats.Stage/Checkpoint/Level) kalau ada
local STAGE_KEYS = { "stage", "checkpoint", "level" }
local function hasKey(name)
    name = string.lower(tostring(name or ""))
    for _, k in ipairs(STAGE_KEYS) do
        if string.find(name, k, 1, true) then return true end
    end
    return false
end

local function findStageValue()
    local function scan(root)
        if not root then return nil end
        for _, v in ipairs(root:GetDescendants()) do
            if (v:IsA("IntValue") or v:IsA("NumberValue")) and hasKey(v.Name) then
                return v
            end
        end
        return nil
    end
    local ls = player:FindFirstChild("leaderstats")
    if ls then
        local v = scan(ls)
        if v then return v end
    end
    return scan(player)
end

local function tpToCheckpoint(num)
    local cfolder = workspace:FindFirstChild("Checkpoints")
    if not cfolder then return false end
    local node = cfolder:FindFirstChild(tostring(num))
    if not node then return false end

    local part
    if node:IsA("BasePart") then
        part = node
    elseif node:IsA("Model") and node.PrimaryPart then
        part = node.PrimaryPart
    else
        for _, d in ipairs(node:GetDescendants()) do
            if d:IsA("BasePart") then part = d break end
        end
    end
    if not part then return false end
    if not humanoidRootPart then updateHRP() end

    pcall(function()
        humanoidRootPart.CFrame = CFrame.new(part.Position + Vector3.new(0, OFFSET_Y, 0))
    end)
    return true
end

-- LOOP: prioritas pakai stage+1; fallback 1..8
task.spawn(function()
    local stageObj = findStageValue()
    while task.wait(0.1) do
        if isActive and humanoidRootPart then
            if stageObj and stageObj.Parent then
                local current = tonumber(stageObj.Value) or 0
                local nextStage = (current == 0 or current >= END_STAGE) and 1 or (current + 1)
                tpToCheckpoint(nextStage)
                task.wait(INTERVAL)
            else
                for i = START_STAGE, END_STAGE do
                    if not isActive then break end
                    tpToCheckpoint(i)
                    task.wait(INTERVAL)
                end
                -- refresh stageObj tiap siklus, barangkali muncul belakangan
                stageObj = findStageValue()
            end
        end
    end
end)

-- KLIK TOGGLE
toggle.MouseButton1Click:Connect(function()
    isActive = not isActive
    toggle.Text = isActive and "Teleport ON" or "Teleport OFF"
    toggle.BackgroundColor3 = isActive and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(60, 0, 90)
end)
